	idnt	"saga_main0.c"
	fpu	1
	opt o+,ol+,op+,oc+,ot+,oj+,ob+,om+
	section	"CODE",code
	public	_Put8BitPixel
	cnop	0,4
_Put8BitPixel
	movem.l	l71,-(a7)
	move.l	_newbuffer,a0
	moveq	#0,d0
	move.w	(10+l73,a7),d0
	moveq	#0,d1
	move.w	_resx,d1
	move.l	d0,d2
	move.l	d1,d3
	swap	d2
	swap	d3
	mulu.w	d1,d2
	mulu.w	d0,d3
	mulu.w	d1,d0
	add.w	d3,d2
	swap	d2
	clr.w	d2
	add.l	d2,d0
	add.l	d0,a0
	moveq	#0,d0
	move.w	(6+l73,a7),d0
	move.b	(15+l73,a7),(0,a0,d0.l)
l71	reg	d2/d3
	movem.l	(a7)+,d2/d3
l73	equ	8
	rts
; stacksize=8
	fpu	1
	opt o+,ol+,op+,oc+,ot+,oj+,ob+,om+
	public	_SetColor
	cnop	0,4
_SetColor
	movem.l	l74,-(a7)
	moveq	#24,d1
	move.l	(4+l76,a7),d0
	lsl.l	d1,d0
	moveq	#16,d2
	move.l	(8+l76,a7),d1
	lsl.l	d2,d1
	or.l	d1,d0
	move.l	(12+l76,a7),d1
	lsl.l	#8,d1
	or.l	d1,d0
	move.l	_SAGACOLORW,a0
	or.l	(16+l76,a7),d0
	move.l	d0,(a0)
l74	reg	d2
	movem.l	(a7)+,d2
l76	equ	4
	rts
; stacksize=4
	fpu	1
	opt o+,ol+,op+,oc+,ot+,oj+,ob+,om+
	public	_WaitMouse
	cnop	0,4
_WaitMouse
	sub.w	#12,a7
	movem.l	l77,-(a7)
	move.l	_CIAAPRA,a0
	moveq	#64,d0
	and.b	(a0),d0
	move.b	d0,(8+l79,a7)
	moveq	#0,d0
	move.b	(8+l79,a7),d0
	move.l	d0,(0+l79,a7)
	moveq	#0,d0
	move.b	(a0),d0
	move.l	d0,(4+l79,a7)
	moveq	#64,d0
	move.l	d0,d1
	and.l	(4+l79,a7),d1
	move.l	d1,(4+l79,a7)
	move.l	(0+l79,a7),d0
	cmp.l	(4+l79,a7),d0
	bne	l36
l35
	moveq	#0,d0
	move.b	(8+l79,a7),d0
	move.l	d0,(0+l79,a7)
	moveq	#0,d0
	move.b	(a0),d0
	move.l	d0,(4+l79,a7)
	moveq	#64,d0
	move.l	d0,d1
	and.l	(4+l79,a7),d1
	move.l	d1,(4+l79,a7)
	move.l	(0+l79,a7),d0
	cmp.l	(4+l79,a7),d0
	beq	l35
l36
l77	reg
l79	equ	0
	add.w	#12,a7
	rts
; stacksize=12
	fpu	1
	opt o+,ol+,op+,oc+,ot+,oj+,ob+,om+
	public	_main
	cnop	0,4
_main
	movem.l	l80,-(a7)
	move.w	#255,d6
	move.l	#2561,d0
	move.l	#1280,d1
	move.l	#720,d2
	jsr	_Set8BitMode
	move.l	d0,_newbuffer
	bne	l13
	moveq	#1,d0
	bra	l10
l13
	move.l	_SAGACOLORW,a1
	move.l	#0,(a1)
	moveq	#1,d5
l60
	jsr	_rand
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	#256,-(a7)
	move.l	d0,-(a7)
	public	__ldivs
	jsr	__ldivs
	addq.w	#8,a7
	move.l	d1,d0
	move.l	(a7)+,a0
	move.l	d0,d3
	opt	om-
	movem.l	(a7)+,d0
	opt	om+
	jsr	_rand
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	#256,-(a7)
	move.l	d0,-(a7)
	public	__ldivs
	jsr	__ldivs
	addq.w	#8,a7
	move.l	d1,d0
	move.l	(a7)+,a0
	move.l	d0,d4
	opt	om-
	movem.l	(a7)+,d0
	opt	om+
	jsr	_rand
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	#256,-(a7)
	move.l	d0,-(a7)
	public	__ldivs
	jsr	__ldivs
	addq.w	#8,a7
	move.l	d1,d0
	move.l	(a7)+,a0
	move.l	d0,d1
	opt	om-
	movem.l	(a7)+,d0
	opt	om+
	moveq	#0,d0
	move.w	d5,d0
	moveq	#24,d7
	lsl.l	d7,d0
	moveq	#16,d7
	lsl.l	d7,d1
	or.l	d1,d0
	move.l	d4,d1
	lsl.l	#8,d1
	or.l	d1,d0
	move.l	_SAGACOLORW,a1
	or.l	d3,d0
	move.l	d0,(a1)
	addq.w	#1,d5
	jsr	_rand
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	#256,-(a7)
	move.l	d0,-(a7)
	public	__ldivs
	jsr	__ldivs
	addq.w	#8,a7
	move.l	d1,d0
	move.l	(a7)+,a0
	move.l	d0,d3
	opt	om-
	movem.l	(a7)+,d0
	opt	om+
	jsr	_rand
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	#256,-(a7)
	move.l	d0,-(a7)
	public	__ldivs
	jsr	__ldivs
	addq.w	#8,a7
	move.l	d1,d0
	move.l	(a7)+,a0
	move.l	d0,d4
	opt	om-
	movem.l	(a7)+,d0
	opt	om+
	jsr	_rand
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	#256,-(a7)
	move.l	d0,-(a7)
	public	__ldivs
	jsr	__ldivs
	addq.w	#8,a7
	move.l	d1,d0
	move.l	(a7)+,a0
	move.l	d0,d1
	opt	om-
	movem.l	(a7)+,d0
	opt	om+
	moveq	#0,d0
	move.w	d5,d0
	moveq	#24,d7
	lsl.l	d7,d0
	moveq	#16,d7
	lsl.l	d7,d1
	or.l	d1,d0
	move.l	d4,d1
	lsl.l	#8,d1
	or.l	d1,d0
	move.l	_SAGACOLORW,a1
	or.l	d3,d0
	move.l	d0,(a1)
	addq.w	#1,d5
	jsr	_rand
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	#256,-(a7)
	move.l	d0,-(a7)
	public	__ldivs
	jsr	__ldivs
	addq.w	#8,a7
	move.l	d1,d0
	move.l	(a7)+,a0
	move.l	d0,d3
	opt	om-
	movem.l	(a7)+,d0
	opt	om+
	jsr	_rand
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	#256,-(a7)
	move.l	d0,-(a7)
	public	__ldivs
	jsr	__ldivs
	addq.w	#8,a7
	move.l	d1,d0
	move.l	(a7)+,a0
	move.l	d0,d4
	opt	om-
	movem.l	(a7)+,d0
	opt	om+
	jsr	_rand
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	#256,-(a7)
	move.l	d0,-(a7)
	public	__ldivs
	jsr	__ldivs
	addq.w	#8,a7
	move.l	d1,d0
	move.l	(a7)+,a0
	move.l	d0,d1
	opt	om-
	movem.l	(a7)+,d0
	opt	om+
	moveq	#0,d0
	move.w	d5,d0
	moveq	#24,d7
	lsl.l	d7,d0
	moveq	#16,d7
	lsl.l	d7,d1
	or.l	d1,d0
	move.l	d4,d1
	lsl.l	#8,d1
	or.l	d1,d0
	move.l	_SAGACOLORW,a1
	or.l	d3,d0
	move.l	d0,(a1)
	addq.w	#1,d5
	cmp.w	d5,d6
	bcc	l60
	move.w	#0,_y
	move.w	_y,d4
	cmp.w	_resy,d4
	bcc	l65
l61
	move.w	#0,_x
	move.w	_x,d4
	cmp.w	_resx,d4
	bcc	l66
l62
	moveq	#0,d0
	move.w	_y,d0
	move.l	#256,-(a7)
	move.l	d0,-(a7)
	public	__ldivs
	jsr	__ldivs
	addq.w	#8,a7
	move.l	d1,d0
	move.w	_y,d3
	move.w	_x,d1
	move.l	_newbuffer,a0
	and.l	#65535,d3
	moveq	#0,d4
	move.w	_resx,d4
	move.l	d0,-(a7)
	move.l	d3,d7
	move.l	d4,d0
	swap	d7
	swap	d0
	mulu.w	d4,d7
	mulu.w	d3,d0
	mulu.w	d4,d3
	add.w	d0,d7
	swap	d7
	clr.w	d7
	add.l	d7,d3
	move.l	(a7)+,d0
	add.l	d3,a0
	and.l	#65535,d1
	move.b	d0,(0,a0,d1.l)
	moveq	#1,d0
	add.w	_x,d0
	move.w	d0,_x
	cmp.w	_resx,d0
	bcs	l62
l66
	moveq	#1,d0
	add.w	_y,d0
	move.w	d0,_y
	cmp.w	_resy,d0
	bcs	l61
l65
	move.l	_CIAAPRA,a0
	moveq	#64,d3
	and.b	(a0),d3
	moveq	#0,d1
	move.b	d3,d1
	moveq	#0,d0
	move.b	(a0),d0
	and.l	#64,d0
	cmp.l	d1,d0
	bne	l67
l63
	moveq	#0,d1
	move.b	d3,d1
	moveq	#0,d0
	move.b	(a0),d0
	and.l	#64,d0
	cmp.l	d1,d0
	beq	l63
l67
	jsr	_RestoreMode
	moveq	#0,d0
l10
l80	reg	d2/d3/d4/d5/d6/d7
	movem.l	(a7)+,d2/d3/d4/d5/d6/d7
l82	equ	24
	rts
	public	_SAGAMODEW
	section	"DATA",data
	cnop	0,4
_SAGAMODEW
	dc.l	14676468
	public	_SAGAMODER
	cnop	0,4
_SAGAMODER
	dc.l	14672372
	public	_SAGAPTRW
	cnop	0,4
_SAGAPTRW
	dc.l	14676460
	public	_SAGAPTRR
	cnop	0,4
_SAGAPTRR
	dc.l	14672364
	public	_SAGACOLORW
	cnop	0,4
_SAGACOLORW
	dc.l	14676872
	public	_CIAAPRA
	cnop	0,4
_CIAAPRA
	dc.l	12574721
	public	_rand
	public	_oldmode
	section	"BSS",bss
	cnop	0,4
_oldmode
	ds.b	2
	public	_oldbuffer
	cnop	0,4
_oldbuffer
	ds.b	4
	public	_newmode
	cnop	0,4
_newmode
	ds.b	2
	public	_rawbuffer
	cnop	0,4
_rawbuffer
	ds.b	4
	public	_newbuffer
	cnop	0,4
_newbuffer
	ds.b	4
	public	_memsize
	cnop	0,4
_memsize
	ds.b	4
	public	_x
	cnop	0,4
_x
	ds.b	2
	public	_y
	cnop	0,4
_y
	ds.b	2
	public	_resx
	cnop	0,4
_resx
	ds.b	2
	public	_resy
	cnop	0,4
_resy
	ds.b	2
	public	_Set8BitMode
	public	_RestoreMode
